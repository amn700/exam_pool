// Assignment name  : aff_g
// Expected files   : aff_g.c
// Version          : 1
// Allowed functions: write
// --------------------------------------------------------------------------------

// Write a program that takes a string, and displays the first 'g' character it
// encounters in it, followed by a newline. If there are no 'g' characters in the
// string, the program diplays 'g' followed by a newline. If the number of parameters is not
// 1, the program displays 'g' followed by a newline.

// Example:

// $> ./aff_g "abc" | cat -e
// g$
// $> ./aff_g 'RaInB0w d4Sh!' | cat -e
// g$
// $> ./aff_g 'ThE C4k3 Is a L|3' | cat -e
// g$
// $> ./aff_g 'C0cOnUt 0N th3 b3AcH' | cat -e
// g$
// $> ./aff_g | cat -e
// g$

// Assignment name  : maff_revalpha
// Expected files   : maff_revalpha.c
// Allowed functions: write
// --------------------------------------------------------------------------------

// Write a program that displays the alphabet in reverse, with even letters in
// uppercase, and odd letters in lowercase, followed by a newline.

// Example:

// $> ./maff_revalpha | cat -e
// zYxWvUtSrQpOnMlKjIhGfEdCbA$


// Assignment name  : sum_digits
// Expected files   : sum_digits.c
// Allowed functions: write
// --------------------------------------------------------------------------------

// Write a function that takes a string as parameter and returns the sum of all
// digits (0-9) it contains.

// Non-digit characters are ignored.
// if no digits are provided print 0.

// Your function must be declared as follows:

// int sum_digits(char *str);

// Examples:

// int main() {
//     sum_digits("abc123def456")  // returns 21
//     sum_digits("hello") // returns 0
//     sum_digits("42") // returns 6
//     sum_digits("") // returns 0
// }

